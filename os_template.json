{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "feedhenry-negotiator",
        "annotations": {
            "description": "RHMAP fh-negotiator",
            "tags": "rhmap,mobile,go",
            "iconClass": "icon-golang"
        }
    },
    "parameters": [{
        "name": "API_TOKEN",
        "value": "",
        "description": "Api token for interacting with OpenShift",
        "required": true
    }, {
        "name": "API_HOST",
        "value": "",
        "description": "Api host for OpenShift",
        "required": true
    }, {
        "name": "DEPLOY_NAMESPACE",
        "value": "",
        "description": "where apps will be deployed",
        "required": true
    }],
    "objects": [{
        "kind": "Route",
        "apiVersion": "v1",
        "metadata": {
            "name": "negotiator",
            "creationTimestamp": null,
            "labels": {
                "name": "negotiator"
            },
            "annotations": {
                "openshift.io/host.generated": "true"
            }
        },
        "spec": {
            "host": "",
            "to": {
                "kind": "Service",
                "name": "negotiator"
            }
        },
        "status": {
            "ingress": [{
                "host": "",
                "routerName": "router",
                "conditions": [{
                    "type": "Admitted",
                    "status": "True",
                    "lastTransitionTime": "2016-12-01T21:45:50Z"
                }]
            }]
        }
    }, {
        "kind": "Service",
        "apiVersion": "v1",
        "metadata": {
            "name": "negotiator",
            "labels": {
                "name": "negotiator"
            }
        },
        "spec": {
            "selector": {
                "name": "negotiator"
            },
            "ports": [{
                "port": 8080,
                "targetPort": 3000
            }]
        }
    }, {
        "kind": "DeploymentConfig",
        "apiVersion": "v1",
        "metadata": {
            "name": "negotiator",
            "creationTimestamp": null,
            "labels": {
                "run": "negotiator",
                "name": "negotiator"
            }
        },
        "spec": {
            "strategy": {
                "type": "Rolling",
                "rollingParams": {
                    "updatePeriodSeconds": 1,
                    "intervalSeconds": 1,
                    "timeoutSeconds": 600,
                    "maxUnavailable": "25%",
                    "maxSurge": "25%"
                },
                "resources": {}
            },
            "triggers": [{
                "type": "ConfigChange"
            }],
            "replicas": 1,
            "test": false,
            "selector": {
                "run": "negotiator",
                "name": "negotiator"
            },
            "template": {
                "metadata": {
                    "creationTimestamp": null,
                    "labels": {
                        "run": "negotiator",
                        "name": "negotiator"
                    }
                },
                "spec": {
                    "containers": [{
                        "name": "negotiator",
                        "image": "rhmap/negotiator:0.0.1",
                        "env": [{
                            "name": "API_TOKEN",
                            "value": "${API_TOKEN}"
                        }, {
                            "name": "API_HOST",
                            "value": "${API_HOST}"
                        }, {
                            "name": "DEPLOY_NAMESPACE",
                            "value": "${DEPLOY_NAMESPACE}"
                        }],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "imagePullPolicy": "IfNotPresent"
                    }],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "securityContext": {}
                }
            }
        },
        "status": {}
    }]
}